# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

variables:
  ACR.Name: '{{#toAlphaNumericString Demo dev registry 46}}{{/toAlphaNumericString}}{{#shortGuid}}{{/shortGuid}}'

jobs:
  - job: A
    pool:
      name: 'Demo azure'
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo $ACR.name
    - script: ./mvnw clean
      displayName: 'Clean build env'
    - script: ./mvnw package
      displayName: 'Maven package'


    - task: Docker@2
      displayName: 'Build container'
      inputs:
        containerRegistry: 'Teco demo env harbor'
        repository: 'demo'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        arguments: '--build-arg JAR_FILE=target/*.jar'

    - task: Docker@2
      displayName: 'Push container to harbor'
      inputs:
        containerRegistry: 'Teco demo env harbor'
        repository: 'demo'
        command: 'push'
  - job: B
    pool:
      name: 'Demo azure'
      vmImage: 'ubuntu-latest'
    steps:
    - task: CmdLine@1
      displayName: 'Set image version in deployment.yaml'
      inputs:
        filename: /bin/bash
        arguments: '-c "awk ''{gsub(\"DEMO_IMAGE\", \"harbor.svc.tieto1.1-4.fi.teco.online/demo/demo:$(Build.BuildId)\", $0); print}'' deployment.yaml > $(build.artifactstagingdirectory)/deployment.yaml"'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'